% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rf_parcoor.R
\name{rf_parcoor}
\alias{rf_parcoor}
\title{Parallel coordinates plots of the paths through a random forest}
\usage{
rf_parcoor(all.paths.out, plot = TRUE, all.nodes = TRUE, plot.title = "",
  plot.x.nodes = 7, colour.scale.log = TRUE, colour.scale.lim = 9,
  grey.scale = TRUE)
}
\arguments{
\item{all.paths.out}{the result of supplying a random forest to \code{\link{rf_pathfiner}}.}

\item{plot}{if \code{TRUE} a \code{\link[ggplot2]{ggplot2}} plot object is returned that is the parallel coordinates plot. If \code{FALSE} the dataframe is returned from which a parallel coordinates plot can be produced with \code{ggplot2} (see examples below).}

\item{all.nodes}{If \code{TRUE} the parallel coordinates plot depicts all nodes on all paths through the random forest. If \code{FALSE} the parallel coordinates plot depicts the first \code{plot.x.nodes} nodes along all paths through the random forest.}

\item{plot.title}{a character string specifying the title to display on the plot.}

\item{plot.x.nodes}{the number of nodes along all paths to represent with parallel vertical axes}

\item{colour.scale.log}{If \code{TRUE} the colour scale for the path selection frequencies uses a logarithmic scale. If \code{FALSE} the colour bar does not use a logarithmic scale.}

\item{colour.scale.lim}{The upper bound of the colour scale (if \code{colour.scale.log = TRUE} supply the logarithm of the upper bound desired to this argument).}

\item{grey.scale}{If \code{TRUE} a grey scale is used in place of a colour scale to represent the path selection frequencies. If \code{FALSE} a colour scale is used to represent the path selection frequencies.}
}
\description{
\code{rf_parcoor} produces parallel coordinates plots of the paths through a random forest. See \url{https://arxiv.org/abs/xxxx.xxxxx} for an explanation of how to interpret these plots.
}
\examples{
# example 1:
library(mlbench)
data(Satellite)
library(randomForest)
rf.1 <- randomForest(classes ~ ., data = Satellite, mtry = 8, keep.forest = TRUE, ntree = 25, importance = TRUE)
rf.1.all.paths <- rf_pathfinder(rf = rf.1)
rf.pc <- rf_parcoor(all.paths.out = rf.1.all.paths, plot = TRUE, all.nodes = TRUE, plot.title = '', grey.scale = FALSE)
rf.pc
# custom ordering of covariates on the vertical axis:
rf.pc + ggplot2::ylim(paste(c('Terminus', paste('x',1:36,sep = '.'))))

# grey scale version:
rf.pc.grey <- rf_parcoor(all.paths.out = rf.1.all.paths, plot = TRUE, all.nodes = TRUE, plot.title = '', grey.scale = TRUE)
rf.pc.grey

# interactive version with plotly (should work once geom_GeomCurve() is implemented in plotly)
# library(plotly)
# ggplotly(p = p1)

# example 2:
data(iris)
library(randomForest)
rf.2 <- randomForest(Species ~ ., data = iris, mtry = 2, keep.forest = TRUE, ntree = 100, importance = TRUE)
rf.2.all.paths <- rf_pathfinder(rf = rf.2)
rf.pc.2 <- rf_parcoor(all.paths.out = rf.2.all.paths, plot = TRUE, all.nodes = TRUE, plot.title = '', grey.scale = TRUE)
rf.pc.2

}
\seealso{
\code{\link{rf_pathfinder}}
}
